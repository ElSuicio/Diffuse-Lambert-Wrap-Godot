[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://bc5lxj0d3n3kr"]

[ext_resource type="Script" uid="uid://xibfsxdm510y" path="res://addons/diffuse_lambert_wrap/DiffuseLambertWrap.gd" id="1_fb5y3"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_fb5y3"]
expanded_output_ports = [0]
parameter_name = "ColorParameter"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_uds6o"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_fb5y3"]
parameter_name = "DiffuseRoughness"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_fb5y3"]
initialized = true
script = ExtResource("1_fb5y3")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fb5y3"]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_uds6o"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_w681f"]
input_name = "albedo"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_lwa2r"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_s3qd7"]
input_name = "diffuse"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_e6jrf"]
input_name = "light_color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_meyxa"]
input_name = "attenuation"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform float DiffuseRoughness : hint_range(0.0, 1.0) = 1.0;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;
	float n_out2p3 = n_out2p0.b;


// VectorCompose:3
	vec3 n_out3p0 = vec3(n_out2p1, n_out2p2, n_out2p3);


// Output:0
	ALBEDO = n_out3p0;


}

void light() {
// Input:7
	vec3 n_out7p0 = DIFFUSE_LIGHT;


// Input:3
	vec3 n_out3p0 = NORMAL;


// Input:4
	vec3 n_out4p0 = LIGHT;


// Input:5
	vec3 n_out5p0 = ALBEDO;


// Input:8
	vec3 n_out8p0 = LIGHT_COLOR;


// Input:9
	float n_out9p0 = ATTENUATION;


// FloatParameter:10
	float n_out10p0 = DiffuseRoughness;


	vec3 n_out11p0;
// LambertWrap:11
	{
		
			const float INV_PI = 0.318309;
			
			vec3 n = normalize( n_out3p0 );
			vec3 l = normalize( n_out4p0 );
			
			float NdotL = dot(n, l); // [-1.0, 1.0].
			
			// https://web.archive.org/web/20210228210901/http://blog.stevemcauley.com/2011/12/03/energy-conserving-wrapped-diffuse/
			
			float diffuse_lambert_wrap = max(0.0, (NdotL + n_out10p0) / ( (1.0 + n_out10p0) * (1.0 + n_out10p0) ) );
			
			n_out11p0 = n_out5p0 * n_out8p0 * n_out9p0 * diffuse_lambert_wrap * INV_PI;
			
	}


// VectorOp:6
	vec3 n_out6p0 = n_out7p0 + n_out11p0;


// Output:0
	DIFFUSE_LIGHT = n_out6p0;


}
"
graph_offset = Vector2(-520.049, 279.781)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_fb5y3")
nodes/fragment/2/position = Vector2(-20, 40)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorCompose_uds6o")
nodes/fragment/3/position = Vector2(240, 140)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 2, 1, 3, 0, 2, 2, 3, 1, 2, 3, 3, 2)
nodes/light/3/node = SubResource("VisualShaderNodeInput_fb5y3")
nodes/light/3/position = Vector2(-300, 140)
nodes/light/4/node = SubResource("VisualShaderNodeInput_uds6o")
nodes/light/4/position = Vector2(-300, 200)
nodes/light/5/node = SubResource("VisualShaderNodeInput_w681f")
nodes/light/5/position = Vector2(-300, 260)
nodes/light/6/node = SubResource("VisualShaderNodeVectorOp_lwa2r")
nodes/light/6/position = Vector2(220, 100)
nodes/light/7/node = SubResource("VisualShaderNodeInput_s3qd7")
nodes/light/7/position = Vector2(-300, 40)
nodes/light/8/node = SubResource("VisualShaderNodeInput_e6jrf")
nodes/light/8/position = Vector2(-300, 320)
nodes/light/9/node = SubResource("VisualShaderNodeInput_meyxa")
nodes/light/9/position = Vector2(-280, 400)
nodes/light/10/node = SubResource("VisualShaderNodeFloatParameter_fb5y3")
nodes/light/10/position = Vector2(-300, 480)
nodes/light/11/node = SubResource("VisualShaderNodeCustom_fb5y3")
nodes/light/11/position = Vector2(0, 240)
nodes/light/connections = PackedInt32Array(6, 0, 0, 0, 7, 0, 6, 0, 11, 0, 6, 1, 8, 0, 11, 3, 5, 0, 11, 2, 4, 0, 11, 1, 3, 0, 11, 0, 9, 0, 11, 4, 10, 0, 11, 5)
